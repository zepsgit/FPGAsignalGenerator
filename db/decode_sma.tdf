--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=32 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 21.1 cbx_cycloneii 2021:10:21:11:03:22:SJ cbx_lpm_add_sub 2021:10:21:11:03:22:SJ cbx_lpm_compare 2021:10:21:11:03:21:SJ cbx_lpm_decode 2021:10:21:11:03:21:SJ cbx_mgl 2021:10:21:11:03:46:SJ cbx_nadder 2021:10:21:11:03:22:SJ cbx_stratix 2021:10:21:11:03:22:SJ cbx_stratixii 2021:10:21:11:03:22:SJ  VERSION_END


-- Copyright (C) 2021  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 36 
SUBDESIGN decode_sma
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[31..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[31..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode501w[2..0]	: WIRE;
	w_anode514w[3..0]	: WIRE;
	w_anode531w[3..0]	: WIRE;
	w_anode541w[3..0]	: WIRE;
	w_anode551w[3..0]	: WIRE;
	w_anode561w[3..0]	: WIRE;
	w_anode571w[3..0]	: WIRE;
	w_anode581w[3..0]	: WIRE;
	w_anode591w[3..0]	: WIRE;
	w_anode603w[2..0]	: WIRE;
	w_anode612w[3..0]	: WIRE;
	w_anode623w[3..0]	: WIRE;
	w_anode633w[3..0]	: WIRE;
	w_anode643w[3..0]	: WIRE;
	w_anode653w[3..0]	: WIRE;
	w_anode663w[3..0]	: WIRE;
	w_anode673w[3..0]	: WIRE;
	w_anode683w[3..0]	: WIRE;
	w_anode694w[2..0]	: WIRE;
	w_anode703w[3..0]	: WIRE;
	w_anode714w[3..0]	: WIRE;
	w_anode724w[3..0]	: WIRE;
	w_anode734w[3..0]	: WIRE;
	w_anode744w[3..0]	: WIRE;
	w_anode754w[3..0]	: WIRE;
	w_anode764w[3..0]	: WIRE;
	w_anode774w[3..0]	: WIRE;
	w_anode785w[2..0]	: WIRE;
	w_anode794w[3..0]	: WIRE;
	w_anode805w[3..0]	: WIRE;
	w_anode815w[3..0]	: WIRE;
	w_anode825w[3..0]	: WIRE;
	w_anode835w[3..0]	: WIRE;
	w_anode845w[3..0]	: WIRE;
	w_anode855w[3..0]	: WIRE;
	w_anode865w[3..0]	: WIRE;
	w_data499w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[31..0] = eq_wire[31..0];
	eq_wire[] = ( ( w_anode865w[3..3], w_anode855w[3..3], w_anode845w[3..3], w_anode835w[3..3], w_anode825w[3..3], w_anode815w[3..3], w_anode805w[3..3], w_anode794w[3..3]), ( w_anode774w[3..3], w_anode764w[3..3], w_anode754w[3..3], w_anode744w[3..3], w_anode734w[3..3], w_anode724w[3..3], w_anode714w[3..3], w_anode703w[3..3]), ( w_anode683w[3..3], w_anode673w[3..3], w_anode663w[3..3], w_anode653w[3..3], w_anode643w[3..3], w_anode633w[3..3], w_anode623w[3..3], w_anode612w[3..3]), ( w_anode591w[3..3], w_anode581w[3..3], w_anode571w[3..3], w_anode561w[3..3], w_anode551w[3..3], w_anode541w[3..3], w_anode531w[3..3], w_anode514w[3..3]));
	w_anode501w[] = ( (w_anode501w[1..1] & (! data_wire[4..4])), (w_anode501w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode514w[] = ( (w_anode514w[2..2] & (! w_data499w[2..2])), (w_anode514w[1..1] & (! w_data499w[1..1])), (w_anode514w[0..0] & (! w_data499w[0..0])), w_anode501w[2..2]);
	w_anode531w[] = ( (w_anode531w[2..2] & (! w_data499w[2..2])), (w_anode531w[1..1] & (! w_data499w[1..1])), (w_anode531w[0..0] & w_data499w[0..0]), w_anode501w[2..2]);
	w_anode541w[] = ( (w_anode541w[2..2] & (! w_data499w[2..2])), (w_anode541w[1..1] & w_data499w[1..1]), (w_anode541w[0..0] & (! w_data499w[0..0])), w_anode501w[2..2]);
	w_anode551w[] = ( (w_anode551w[2..2] & (! w_data499w[2..2])), (w_anode551w[1..1] & w_data499w[1..1]), (w_anode551w[0..0] & w_data499w[0..0]), w_anode501w[2..2]);
	w_anode561w[] = ( (w_anode561w[2..2] & w_data499w[2..2]), (w_anode561w[1..1] & (! w_data499w[1..1])), (w_anode561w[0..0] & (! w_data499w[0..0])), w_anode501w[2..2]);
	w_anode571w[] = ( (w_anode571w[2..2] & w_data499w[2..2]), (w_anode571w[1..1] & (! w_data499w[1..1])), (w_anode571w[0..0] & w_data499w[0..0]), w_anode501w[2..2]);
	w_anode581w[] = ( (w_anode581w[2..2] & w_data499w[2..2]), (w_anode581w[1..1] & w_data499w[1..1]), (w_anode581w[0..0] & (! w_data499w[0..0])), w_anode501w[2..2]);
	w_anode591w[] = ( (w_anode591w[2..2] & w_data499w[2..2]), (w_anode591w[1..1] & w_data499w[1..1]), (w_anode591w[0..0] & w_data499w[0..0]), w_anode501w[2..2]);
	w_anode603w[] = ( (w_anode603w[1..1] & (! data_wire[4..4])), (w_anode603w[0..0] & data_wire[3..3]), enable_wire);
	w_anode612w[] = ( (w_anode612w[2..2] & (! w_data499w[2..2])), (w_anode612w[1..1] & (! w_data499w[1..1])), (w_anode612w[0..0] & (! w_data499w[0..0])), w_anode603w[2..2]);
	w_anode623w[] = ( (w_anode623w[2..2] & (! w_data499w[2..2])), (w_anode623w[1..1] & (! w_data499w[1..1])), (w_anode623w[0..0] & w_data499w[0..0]), w_anode603w[2..2]);
	w_anode633w[] = ( (w_anode633w[2..2] & (! w_data499w[2..2])), (w_anode633w[1..1] & w_data499w[1..1]), (w_anode633w[0..0] & (! w_data499w[0..0])), w_anode603w[2..2]);
	w_anode643w[] = ( (w_anode643w[2..2] & (! w_data499w[2..2])), (w_anode643w[1..1] & w_data499w[1..1]), (w_anode643w[0..0] & w_data499w[0..0]), w_anode603w[2..2]);
	w_anode653w[] = ( (w_anode653w[2..2] & w_data499w[2..2]), (w_anode653w[1..1] & (! w_data499w[1..1])), (w_anode653w[0..0] & (! w_data499w[0..0])), w_anode603w[2..2]);
	w_anode663w[] = ( (w_anode663w[2..2] & w_data499w[2..2]), (w_anode663w[1..1] & (! w_data499w[1..1])), (w_anode663w[0..0] & w_data499w[0..0]), w_anode603w[2..2]);
	w_anode673w[] = ( (w_anode673w[2..2] & w_data499w[2..2]), (w_anode673w[1..1] & w_data499w[1..1]), (w_anode673w[0..0] & (! w_data499w[0..0])), w_anode603w[2..2]);
	w_anode683w[] = ( (w_anode683w[2..2] & w_data499w[2..2]), (w_anode683w[1..1] & w_data499w[1..1]), (w_anode683w[0..0] & w_data499w[0..0]), w_anode603w[2..2]);
	w_anode694w[] = ( (w_anode694w[1..1] & data_wire[4..4]), (w_anode694w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode703w[] = ( (w_anode703w[2..2] & (! w_data499w[2..2])), (w_anode703w[1..1] & (! w_data499w[1..1])), (w_anode703w[0..0] & (! w_data499w[0..0])), w_anode694w[2..2]);
	w_anode714w[] = ( (w_anode714w[2..2] & (! w_data499w[2..2])), (w_anode714w[1..1] & (! w_data499w[1..1])), (w_anode714w[0..0] & w_data499w[0..0]), w_anode694w[2..2]);
	w_anode724w[] = ( (w_anode724w[2..2] & (! w_data499w[2..2])), (w_anode724w[1..1] & w_data499w[1..1]), (w_anode724w[0..0] & (! w_data499w[0..0])), w_anode694w[2..2]);
	w_anode734w[] = ( (w_anode734w[2..2] & (! w_data499w[2..2])), (w_anode734w[1..1] & w_data499w[1..1]), (w_anode734w[0..0] & w_data499w[0..0]), w_anode694w[2..2]);
	w_anode744w[] = ( (w_anode744w[2..2] & w_data499w[2..2]), (w_anode744w[1..1] & (! w_data499w[1..1])), (w_anode744w[0..0] & (! w_data499w[0..0])), w_anode694w[2..2]);
	w_anode754w[] = ( (w_anode754w[2..2] & w_data499w[2..2]), (w_anode754w[1..1] & (! w_data499w[1..1])), (w_anode754w[0..0] & w_data499w[0..0]), w_anode694w[2..2]);
	w_anode764w[] = ( (w_anode764w[2..2] & w_data499w[2..2]), (w_anode764w[1..1] & w_data499w[1..1]), (w_anode764w[0..0] & (! w_data499w[0..0])), w_anode694w[2..2]);
	w_anode774w[] = ( (w_anode774w[2..2] & w_data499w[2..2]), (w_anode774w[1..1] & w_data499w[1..1]), (w_anode774w[0..0] & w_data499w[0..0]), w_anode694w[2..2]);
	w_anode785w[] = ( (w_anode785w[1..1] & data_wire[4..4]), (w_anode785w[0..0] & data_wire[3..3]), enable_wire);
	w_anode794w[] = ( (w_anode794w[2..2] & (! w_data499w[2..2])), (w_anode794w[1..1] & (! w_data499w[1..1])), (w_anode794w[0..0] & (! w_data499w[0..0])), w_anode785w[2..2]);
	w_anode805w[] = ( (w_anode805w[2..2] & (! w_data499w[2..2])), (w_anode805w[1..1] & (! w_data499w[1..1])), (w_anode805w[0..0] & w_data499w[0..0]), w_anode785w[2..2]);
	w_anode815w[] = ( (w_anode815w[2..2] & (! w_data499w[2..2])), (w_anode815w[1..1] & w_data499w[1..1]), (w_anode815w[0..0] & (! w_data499w[0..0])), w_anode785w[2..2]);
	w_anode825w[] = ( (w_anode825w[2..2] & (! w_data499w[2..2])), (w_anode825w[1..1] & w_data499w[1..1]), (w_anode825w[0..0] & w_data499w[0..0]), w_anode785w[2..2]);
	w_anode835w[] = ( (w_anode835w[2..2] & w_data499w[2..2]), (w_anode835w[1..1] & (! w_data499w[1..1])), (w_anode835w[0..0] & (! w_data499w[0..0])), w_anode785w[2..2]);
	w_anode845w[] = ( (w_anode845w[2..2] & w_data499w[2..2]), (w_anode845w[1..1] & (! w_data499w[1..1])), (w_anode845w[0..0] & w_data499w[0..0]), w_anode785w[2..2]);
	w_anode855w[] = ( (w_anode855w[2..2] & w_data499w[2..2]), (w_anode855w[1..1] & w_data499w[1..1]), (w_anode855w[0..0] & (! w_data499w[0..0])), w_anode785w[2..2]);
	w_anode865w[] = ( (w_anode865w[2..2] & w_data499w[2..2]), (w_anode865w[1..1] & w_data499w[1..1]), (w_anode865w[0..0] & w_data499w[0..0]), w_anode785w[2..2]);
	w_data499w[2..0] = data_wire[2..0];
END;
--VALID FILE
